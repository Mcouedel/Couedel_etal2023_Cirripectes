T1<-rotate(T1,372)
T1<-rotate(T1,307)
T2<-ggtree(MLroot,size=0.1, ladderize = TRUE,branch.length = 'none') +
geom_treescale(x=0, y=-2, width=.01, color='black',fontsize = 1.5,linesize=0.2)+
#geom_text2(aes(subset=!isTip, label=label), hjust=-.2, size=2) +
geom_tiplab(aes(label="",color=Country), align=TRUE, linesize=.4) +
geom_point2(aes(subset=isTip, color=Country, rm.na=TRUE)) +
col19scale + #, shape=Family, size=Abundance
#scale_size_continuous(trans=log_trans(5)) +
#scale_x_continuous(expand = c(0,.1))+
geom_text(aes(label=node), hjust=-.3)+
theme(legend.position="none",plot.margin = unit(c(0.2,0,0.2,0),"cm")) +
ggtitle("ML tree")+
#geom_tiplab(hjust =1, align = TRUE) +
geom_rootedge(rootedge = 0.01)+
#geom_text(data=data.ML.print,mapping=aes(x=branch,label=x),vjust=-0.5,size=2)+
scale_x_reverse() # if required add within scale_x_reverse() -> limits = c(5.2, 0))
T2<-rotate(T2,554)
T2<-rotate(T2,308)
T2<-rotate(T2,310)
T2<-rotate(T2,311)
T2<-rotate(T2,487)
T2<-rotate(T2,488)
T1 <- ggtree(BEAST,size=0.1, ladderize = TRUE,branch.length = 'rate') +
#geom_text2(aes(subset=!isTip, label=label), hjust=-.2, size=2) +
geom_tiplab(aes(label=CorrectedSpecies), align=TRUE, linesize=.5)+
#theme_tree2(legend.position='none')+ theme(axis.title.x = element_text(size = 12))+
theme(legend.position='none')+
geom_treescale(x=0, y=-2, width=.01, color='black',fontsize = 1.5,linesize=0.2)+
geom_point2(aes(subset=isTip, color=Country, rm.na=TRUE),size=0.5) +
col19scale + #, shape=Family, size=Abundance
#scale_size_continuous(trans=log_trans(5)) +
#scale_x_continuous(expand = c(0,.1))+
#geom_text(aes(label=node), hjust=-.3)+
#geom_hilight(node=318, fill="steelblue", alpha=.6) +
geom_rootedge(rootedge = 0.001)+
geom_text(data=data.BEAST.post,mapping=aes(x=branch,
label=ifelse(posterior>=0.90 & branch<0.1108,round(posterior,2) ,"")),vjust=-0.3,size=1.5)+
#geom_tiplab(aes(label=ifelse(ID=="GBMNB10963-20",ID ,"")), align=TRUE, linesize=.5) +
ggtitle("MCC tree")
T1<-rotate(T1,440)
T1<-rotate(T1,414)
T1<-rotate(T1,382)
T1<-rotate(T1,316)
T1<-rotate(T1,317)
T2<-ggtree(MLroot,size=0.1, ladderize = TRUE,branch.length = 'rate') +
geom_treescale(x=0, y=-2, width=.01, color='black',fontsize = 1.5,linesize=0.2)+
#geom_text2(aes(subset=!isTip, label=label), hjust=-.2, size=2) +
geom_tiplab(aes(label=CorrectedSpecies), align=TRUE, linesize=.5)+
geom_tiplab(aes(label="",color=Country), align=TRUE, linesize=.4) +
geom_point2(aes(subset=isTip, color=Country, rm.na=TRUE)) +
col19scale + #, shape=Family, size=Abundance
#scale_size_continuous(trans=log_trans(5)) +
#scale_x_continuous(expand = c(0,.1))+
#geom_text(aes(label=node), hjust=-.3)+
theme(legend.position="none",plot.margin = unit(c(0.2,0,0.2,0),"cm")) +
ggtitle("ML tree")+
#geom_tiplab(hjust =1, align = TRUE) +
geom_rootedge(rootedge = 0.01)+
geom_text(data=data.ML.print,mapping=aes(x=branch,label=x),vjust=-0.5,size=2)+
scale_x_reverse() # if required add within scale_x_reverse() -> limits = c(5.2, 0))
T2<-rotate(T2,299)
T2<-rotate(T2,443)
T2<-rotate(T2,425)
#Actualisation des données de liaison
d1 = T1$data[T1$data$isTip,]
d1$x[] = 1
d2 = T2$data[T2$data$isTip,]
d2$x[] = 2
TTcon <- rbind(d1, d2)
L1<-ggplot(TTcon, aes(x = x, y = y, colour = Country, group = label)) +
geom_line() + #ylim(1,197)+
col19scale +
theme_void() +
theme(legend.position="none", plot.margin = unit(c(0.1,-0.7,-0.29,-0.5),"cm"))
both<-cowplot::plot_grid(T1, L1 ,T2, nrow = 1, align = "none")
both
#Mise en forme des taxons problématques
#ici liste 6 = cluster 3
MPTP.cluster3<-as.data.frame(subset(delimitation$ID,delimitation$MPTP_COI == 3))
colnames(MPTP.cluster3)<-"label"
MPTP.cluster3<-dplyr::left_join(MPTP.cluster3,tbl.BEAST,by="label")
MPTP.cluster3<-MPTP.cluster3["node"]
colnames(MPTP.cluster3)<-"V1"
MPTP<-subset(MPTP,MPTP$V1!=MPTP.ancestor[[6]])#Retire le cluster erreur
MPTP<-dplyr::bind_rows(MPTP.cluster3,MPTP)
MPTP$annote<-""
View(MPTP)
#Mise en forme en 1 seul dataframe option
rownames(ASAP)<-c(1:length(ASAP$V1))
ASAP$row<-c(1:length(ASAP$V1))
colnames(ASAP)<-c("ASAP","annote","row")
rownames(MPTP)<-c(1:length(MPTP$V1))
MPTP$row<-c(1:length(MPTP$V1))
colnames(MPTP)<-c("MPTP","annote","row")
rownames(GMYC)<-c(1:length(GMYC$V1))
GMYC$row<-c(1:length(GMYC$V1))
colnames(GMYC)<-c("GMYC","annote","row")
node.dt<-dplyr::full_join(ASAP,MPTP, by="row")
node.dt<-dplyr::full_join(node.dt,GMYC, by="row")
#Couleurs
col.cluster<-c("#D73027","#F46D43","#FDAE61","#4575B4","#74ADD1","#ABD9E9")
#Création des groupes pour GMYC
GMYC.label <- sapply(as.character(unique(delimitation$GMYC_COI)) , function(x){subset(delimitation,delimitation$GMYC_COI == x)$ID },USE.NAMES=TRUE, simplify = FALSE )
GMYC.ancestor <- sapply(as.character(unique(delimitation$GMYC_COI)) , function(x){findMRCA(BEAST.tree,GMYC.label[[x]]) },USE.NAMES=TRUE,simplify=FALSE)
GMYC.no.ancestor.label<-GMYC.label[sapply(GMYC.ancestor,is.null)]
View(GMYC.ancestor)
#Création des groupes pour GMYC
GMYC.label <- sapply(as.character(unique(delimitation$GMYC_COI)) , function(x){subset(delimitation,delimitation$GMYC_COI == x)$ID },USE.NAMES=TRUE, simplify = FALSE )
GMYC.ancestor <- sapply(as.character(unique(delimitation$GMYC_COI)) , function(x){findMRCA(BEAST.tree,GMYC.label[[x]]) },USE.NAMES=TRUE,simplify=FALSE)
GMYC.no.ancestor.label<-GMYC.label[sapply(GMYC.ancestor,is.null)]
GMYC.no.ancestor <- sapply(names(GMYC.no.ancestor.label), function(x){subset(tbl.BEAST,tbl.BEAST$label == GMYC.no.ancestor.label[[x]] )$node },USE.NAMES = TRUE, simplify = FALSE )
GMYC.ancestor<-replace(GMYC.ancestor,names(GMYC.ancestor) %in% names(GMYC.no.ancestor),GMYC.no.ancestor)
GMYC<-as.data.frame(t(as.data.frame(GMYC.ancestor %>% purrr::list_modify("NA" = NULL))))
GMYC$annote<-""
#Mise en forme en 1 seul dataframe option
rownames(ASAP)<-c(1:length(ASAP$V1))
ASAP$row<-c(1:length(ASAP$V1))
colnames(ASAP)<-c("ASAP","annote","row")
rownames(MPTP)<-c(1:length(MPTP$V1))
MPTP$row<-c(1:length(MPTP$V1))
colnames(MPTP)<-c("MPTP","annote","row")
rownames(GMYC)<-c(1:length(GMYC$V1))
GMYC$row<-c(1:length(GMYC$V1))
colnames(GMYC)<-c("GMYC","annote","row")
View(GMYC)
node.dt<-dplyr::full_join(ASAP,MPTP, by="row")
node.dt<-dplyr::full_join(node.dt,GMYC, by="row")
#Couleurs
col.cluster<-c("#D73027","#F46D43","#FDAE61","#4575B4","#74ADD1","#ABD9E9")
p <- ggtree(BEAST,mrsd="2021-01-01", ladderize = TRUE,branch.length = 'rate') +
theme_tree2()+
geom_text2(aes(subset=!isTip, label=label), hjust=-.2, size=2) +
#geom_tiplab(aes(label=Species), hjust=-.2) +
#geom_tiplab(aes(label=SpBOLD), align=TRUE, linesize=.5) +
#geom_tiplab(aes(label=ifelse(ID=="GBMNB10963-20",ID ,"")), align=TRUE, linesize=.5) +
geom_point2(aes(subset=isTip, color=Country, shape=Source, rm.na=TRUE)) +
colscale + #, shape=Family, size=Abundance
scale_size_continuous(trans=log_trans(5)) +
#geom_text(aes(label=node), hjust=-.3)+
#geom_hilight(node=401, fill="steelblue", alpha=.6) +
#geom_hilight(node=311, fill="darkgreen", alpha=.6)+
scale_x_continuous(expand = c(0,.1))+
theme(legend.position="right") #+ ggtitle("Phylo-géographie du genre Cirripectes")
plot(p)
p.beast<-p
#ggsave(p,file=here("figures","ArbreR_cirripectes.png"), device ="png",scale=2)
p <- ggtree(BEAST,mrsd="2021-01-01", ladderize = TRUE,branch.length = 'rate') +
theme_tree2()+
geom_text2(aes(subset=!isTip, label=label), hjust=-.2, size=2) +
#geom_tiplab(aes(label=Species), hjust=-.2) +
#geom_tiplab(aes(label=SpBOLD), align=TRUE, linesize=.5) +
#geom_tiplab(aes(label=ifelse(ID=="GBMNB10963-20",ID ,"")), align=TRUE, linesize=.5) +
geom_point2(aes(subset=isTip, color=Country, shape=Source, rm.na=TRUE)) +
cols19cale + #, shape=Family, size=Abundance
scale_size_continuous(trans=log_trans(5)) +
#geom_text(aes(label=node), hjust=-.3)+
#geom_hilight(node=401, fill="steelblue", alpha=.6) +
#geom_hilight(node=311, fill="darkgreen", alpha=.6)+
scale_x_continuous(expand = c(0,.1))+
theme(legend.position="right") #+ ggtitle("Phylo-géographie du genre Cirripectes")
plot(p)
p.beast<-p
#ggsave(p,file=here("figures","ArbreR_cirripectes.png"), device ="png",scale=2)
T1 <- ggtree(BEAST,size=0.1, ladderize = TRUE,branch.length = 'rate') +
geom_text(data=data.BEAST.post,mapping=aes(x=branch,
label=ifelse(posterior>=0.90 & branch<0.1108,round(posterior,2) ,"")),vjust=-0.3,size=1)+
##geom_text_repel(data=data.BEAST.post,mapping=aes(x=branch,
#label=ifelse(posterior>=0.90 & branch<0.1108,round(posterior,2) ,"")),size=1)+
#geom_label_repel(data=data.BEAST.post,mapping=aes(x=branch,
#label=ifelse(posterior>=0.90 & branch<0.1108,round(posterior,2) ,"")))+
geom_treescale(x=0, y=-2, width=.01, color='black',fontsize = 1.5,linesize=0.2)+
#geom_tiplab(aes(label=ID),align=TRUE, hjust=-3.5,size=2) +
geom_point2(aes(subset=isTip, color=Country, rm.na=TRUE),size=0.5) +
#geom_label(aes(label = "", fill = posterior)) +
col19scale +
theme(plot.margin = unit(c(-1.1,0,-0.65,-0.5),"cm"),#c(0.8,0,0.5,0)-1.05,0,-0.75,-0.5
legend.position="none",
legend.background=element_rect(fill=NA),
legend.title=element_text(size=7),
legend.text=element_text(size=5.5),
legend.spacing.y = unit(0.02, "cm"))+
scale_colour_manual(name="Localities", values = col19,na.value="#000000",
guide=guide_legend(keywidth=0.5,keyheight=0.5,order=2,override.aes=list(size=2,alpha=1)))#
T1<-rotate(T1,546)
T1<-rotate(T1,372)
T1<-rotate(T1,307)
T1
info<-ggplot_build(T1)
delimtree<-T1+ geom_rootedge(rootedge = 0.005)+
geom_cladelab(data=ASAP,mapping=aes(node=ASAP,label=annote),barsize=3,align=TRUE,horizontal=FALSE,angle=90,barcolor="black",extend=0.2,offset=0.005)+
geom_cladelab(data=GMYC,mapping=aes(node=GMYC,label=annote),barsize=3,align=TRUE,horizontal=FALSE,angle=90,barcolor="black",extend=0.2,offset=0.015)+
geom_cladelab(data=MPTP,mapping=aes(node=MPTP,label=annote),barsize=3,align=TRUE,horizontal=FALSE,angle=90,barcolor="black",extend=0.2,offset=0.025)
info.delimtree<-ggplot_build(delimtree)
delimtree<-delimtree+
annotate("text", x=max(info.delimtree$data[[9]]$x)+0.0005, y=max(info.delimtree$data[[1]]$y)+8, label= "ASAP",angle = 70,size=2.5)+ #0.1280
annotate("text", x=max(info.delimtree$data[[11]]$x)+0.0005, y=max(info.delimtree$data[[1]]$y)+8, label= "GMYC",angle = 70,size=2.5)+
annotate("text", x=max(info.delimtree$data[[13]]$x)+0.0005, y=max(info.delimtree$data[[1]]$y)+8, label= "MPTP",angle = 70, size=2.5)+
annotate("text", x=max(info.delimtree$data[[9]]$x), y=-1, label= length(ASAP$row), size=2)+
annotate("text", x=max(info.delimtree$data[[11]]$x), y=-1, label= length(GMYC$row), size=2)+
annotate("text", x=max(info.delimtree$data[[13]]$x), y=-1, label= length(MPTP$row), size=2)+
ggtitle("MCC tree")+
ylim(-3,max(info.delimtree$data[[1]]$y)+10)
delimtree
T2<-ggtree(MLroot,size=0.1, ladderize = TRUE,branch.length = 'rate') +
geom_treescale(x=0, y=-2, width=.01, color='black',fontsize = 1.5,linesize=0.2)+
#geom_text2(aes(subset=!isTip, label=label), hjust=-.2, size=2) +
geom_tiplab(aes(label="",color=Country), align=TRUE, linesize=.4) +
geom_point2(aes(subset=isTip, color=Country, rm.na=TRUE),size=0.5) +
col19scale + #, shape=Family, size=Abundance
#scale_size_continuous(trans=log_trans(5)) +
#scale_x_continuous(expand = c(0,.1))+
#geom_text(aes(label=node), hjust=-.3,size=1)+
theme(legend.position="none",plot.margin = unit(c(0.25,0,0.2,0),"cm")) +
ggtitle("")+
#geom_tiplab(hjust =1, align = TRUE) +
geom_rootedge(rootedge = 0.01)+
# geom_text(data=data.ML.print,mapping=aes(x=branch,label=label.x),vjust=-0.5,size=2)+
geom_text(data=data.ML.print,mapping=aes(x=branch,label=ifelse(label.x2>80,label.x,"")),vjust=-0.5,size=1)+
scale_x_reverse() # if required add within scale_x_reverse() -> limits = c(5.2, 0))
T2<-rotate(T2,554)
T2<-rotate(T2,308)
T2<-rotate(T2,310)
T2<-rotate(T2,311)
T2<-rotate(T2,487)
T2<-rotate(T2,488)
#Recalcul des positions
d1 = T1$data[T1$data$isTip,]
d1$x[] = 1
d2 = T2$data[T2$data$isTip,]
d2$x[] = 2
TTcon <- rbind(d1, d2)
L1<-ggplot(TTcon, aes(x = x, y = y, colour = Country, group = label)) +
geom_line() + #ylim(1,197)+
col19scale +
theme_void() +
theme(legend.position="none", plot.margin = unit(c(0.1,-0.7,-0.29,-0.4),"cm"))
#ajuster les marges pour que ça tombe bien en face
#legend <- get_legend(T1) #activer la légende
both2<-cowplot::plot_grid(delimtree, L1 ,T2, nrow = 1, align = "none")
#ggsave(both2,file=here("figures","2022-03-09_MCC-ML-Delim-Tree.png"), device ="png",width = 19.05,height = 17, units = "cm")
#ggplotly(both2)
both2.info<-ggplot_build(both)
both2leg<-both2+annotation_custom(legend,xmin=-0.85,ymin=0.6)
both2leg
ggsave(both2,file=here("figures","2022-12_MCC-ML-Delim-Tree.pdf"), device ="pdf",width = 19.05,height = 17, units = "cm")
#ggsave(both2leg,file=here("figures","2022-03-09_MCC-ML-Delim-Tree_leg.pdf"), device ="pdf",width = 19.05,height = 17, units = "cm")
#ggsave(both2leg,file=here("figures","2022-03-09_MCC-ML-Delim-Tree_leg.svg"), device ="svg",width = 19.05,height = 17, units = "cm")
both2
View(MPTP)
#Création des groupes pour MPTP
MPTP.label <- sapply(as.character(unique(delimitation$MPTP_COI)) , function(x){subset(delimitation,delimitation$MPTP_COI == x)$ID },USE.NAMES=TRUE, simplify = FALSE )
MPTP.ancestor <- sapply(as.character(unique(delimitation$MPTP_COI)) , function(x){findMRCA(BEAST.tree,MPTP.label[[x]]) },USE.NAMES=TRUE,simplify=FALSE)
#Création des groupes pour MPTP
MPTP.label <- sapply(as.character(unique(delimitation$MPTP_COI)) , function(x){subset(delimitation,delimitation$MPTP_COI == x)$ID },USE.NAMES=TRUE, simplify = FALSE )
View(MPTP.label)
p <- ggtree(BEAST,mrsd="2021-01-01", ladderize = TRUE,branch.length = 'rate') +
theme_tree2()+
geom_text2(aes(subset=!isTip, label=label), hjust=-.2, size=2) +
#geom_tiplab(aes(label=Species), hjust=-.2) +
#geom_tiplab(aes(label=SpBOLD), align=TRUE, linesize=.5) +
geom_tiplab(aes(label=ifelse(ID=="GBMNB10963-20",ID ,"")), align=TRUE, linesize=.5) +
geom_point2(aes(subset=isTip, color=Country, shape=Source, rm.na=TRUE)) +
cols19cale + #, shape=Family, size=Abundance
scale_size_continuous(trans=log_trans(5)) +
#geom_text(aes(label=node), hjust=-.3)+
#geom_hilight(node=401, fill="steelblue", alpha=.6) +
#geom_hilight(node=311, fill="darkgreen", alpha=.6)+
scale_x_continuous(expand = c(0,.1))+
theme(legend.position="right") #+ ggtitle("Phylo-géographie du genre Cirripectes")
plot(p)
p <- ggtree(BEAST,mrsd="2021-01-01", ladderize = TRUE,branch.length = 'rate') +
theme_tree2()+
geom_text2(aes(subset=!isTip, label=label), hjust=-.2, size=2) +
#geom_tiplab(aes(label=Species), hjust=-.2) +
#geom_tiplab(aes(label=SpBOLD), align=TRUE, linesize=.5) +
geom_tiplab(aes(label=ifelse(ID=="GBMNB10963-20",ID ,"")), align=TRUE, linesize=.5) +
geom_point2(aes(subset=isTip, color=Country, shape=Source, rm.na=TRUE)) +
col19scale + #, shape=Family, size=Abundance
scale_size_continuous(trans=log_trans(5)) +
#geom_text(aes(label=node), hjust=-.3)+
#geom_hilight(node=401, fill="steelblue", alpha=.6) +
#geom_hilight(node=311, fill="darkgreen", alpha=.6)+
scale_x_continuous(expand = c(0,.1))+
theme(legend.position="right") #+ ggtitle("Phylo-géographie du genre Cirripectes")
plot(p)
plotly(p)
ggplotly(p)
MPTP.ancestor <- sapply(as.character(unique(delimitation$MPTP_COI)) , function(x){findMRCA(BEAST.tree,MPTP.label[[x]]) },USE.NAMES=TRUE,simplify=FALSE)
View(MPTP.ancestor)
MPTP.no.ancestor.label<-MPTP.label[sapply(MPTP.ancestor,is.null)]
MPTP.no.ancestor <- sapply(names(MPTP.no.ancestor.label), function(x){subset(tbl.BEAST,tbl.BEAST$label == MPTP.no.ancestor.label[[x]] )$node },USE.NAMES = TRUE, simplify = FALSE )
MPTP.ancestor<-replace(MPTP.ancestor,names(MPTP.ancestor) %in% names(MPTP.no.ancestor),MPTP.no.ancestor)
MPTP<-as.data.frame(t(as.data.frame(MPTP.ancestor %>% purrr::list_modify("NA" = NULL))))
View(MPTP)
MPTP.ancestor<-replace(MPTP.ancestor,names(MPTP.ancestor) %in% names(MPTP.no.ancestor),MPTP.no.ancestor)
View(MPTP.ancestor)
#Création des groupes pour MPTP
MPTP.label <- sapply(as.character(unique(delimitation$MPTP_COI)) , function(x){subset(delimitation,delimitation$MPTP_COI == x)$ID },USE.NAMES=TRUE, simplify = FALSE )
MPTP.ancestor <- sapply(as.character(unique(delimitation$MPTP_COI)) , function(x){findMRCA(BEAST.tree,MPTP.label[[x]]) },USE.NAMES=TRUE,simplify=FALSE)
MPTP.no.ancestor.label<-MPTP.label[sapply(MPTP.ancestor,is.null)]
MPTP.no.ancestor <- sapply(names(MPTP.no.ancestor.label), function(x){subset(tbl.BEAST,tbl.BEAST$label == MPTP.no.ancestor.label[[x]] )$node },USE.NAMES = TRUE, simplify = FALSE )
MPTP.ancestor<-replace(MPTP.ancestor,names(MPTP.ancestor) %in% names(MPTP.no.ancestor),MPTP.no.ancestor)
MPTP<-as.data.frame(t(as.data.frame(MPTP.ancestor %>% purrr::list_modify("NA" = NULL))))
MPTP$annote<-""
View(MPTP)
MPTP$row<-c(1:length(MPTP$V1))
colnames(MPTP)<-c("MPTP","annote","row")
node.dt<-dplyr::full_join(ASAP,MPTP, by="row")
node.dt<-dplyr::full_join(node.dt,GMYC, by="row")
View(node.dt)
delimtree
T1 <- ggtree(BEAST,size=0.1, ladderize = TRUE,branch.length = 'rate') +
geom_text(data=data.BEAST.post,mapping=aes(x=branch,
label=ifelse(posterior>=0.90 & branch<0.1108,round(posterior,2) ,"")),vjust=-0.3,size=1)+
##geom_text_repel(data=data.BEAST.post,mapping=aes(x=branch,
#label=ifelse(posterior>=0.90 & branch<0.1108,round(posterior,2) ,"")),size=1)+
#geom_label_repel(data=data.BEAST.post,mapping=aes(x=branch,
#label=ifelse(posterior>=0.90 & branch<0.1108,round(posterior,2) ,"")))+
geom_treescale(x=0, y=-2, width=.01, color='black',fontsize = 1.5,linesize=0.2)+
#geom_tiplab(aes(label=ID),align=TRUE, hjust=-3.5,size=2) +
geom_point2(aes(subset=isTip, color=Country, rm.na=TRUE),size=0.5) +
#geom_label(aes(label = "", fill = posterior)) +
col19scale +
theme(plot.margin = unit(c(-1.1,0,-0.65,-0.5),"cm"),#c(0.8,0,0.5,0)-1.05,0,-0.75,-0.5
legend.position="none",
legend.background=element_rect(fill=NA),
legend.title=element_text(size=7),
legend.text=element_text(size=5.5),
legend.spacing.y = unit(0.02, "cm"))+
scale_colour_manual(name="Localities", values = col19,na.value="#000000",
guide=guide_legend(keywidth=0.5,keyheight=0.5,order=2,override.aes=list(size=2,alpha=1)))+
geom_tiplab(aes(label=ifelse(ID=="GBMNB10963-20",ID ,"")), align=TRUE, linesize=.5)
T1<-rotate(T1,546)
T1<-rotate(T1,372)
T1<-rotate(T1,307)
T1
info<-ggplot_build(T1)
delimtree<-T1+ geom_rootedge(rootedge = 0.005)+
geom_cladelab(data=ASAP,mapping=aes(node=ASAP,label=annote),barsize=3,align=TRUE,horizontal=FALSE,angle=90,barcolor="black",extend=0.2,offset=0.005)+
geom_cladelab(data=GMYC,mapping=aes(node=GMYC,label=annote),barsize=3,align=TRUE,horizontal=FALSE,angle=90,barcolor="black",extend=0.2,offset=0.015)+
geom_cladelab(data=MPTP,mapping=aes(node=MPTP,label=annote),barsize=3,align=TRUE,horizontal=FALSE,angle=90,barcolor="black",extend=0.2,offset=0.025)
info.delimtree<-ggplot_build(delimtree)
delimtree<-delimtree+
annotate("text", x=max(info.delimtree$data[[9]]$x)+0.0005, y=max(info.delimtree$data[[1]]$y)+8, label= "ASAP",angle = 70,size=2.5)+ #0.1280
annotate("text", x=max(info.delimtree$data[[11]]$x)+0.0005, y=max(info.delimtree$data[[1]]$y)+8, label= "GMYC",angle = 70,size=2.5)+
annotate("text", x=max(info.delimtree$data[[13]]$x)+0.0005, y=max(info.delimtree$data[[1]]$y)+8, label= "MPTP",angle = 70, size=2.5)+
annotate("text", x=max(info.delimtree$data[[9]]$x), y=-1, label= length(ASAP$row), size=2)+
annotate("text", x=max(info.delimtree$data[[11]]$x), y=-1, label= length(GMYC$row), size=2)+
annotate("text", x=max(info.delimtree$data[[13]]$x), y=-1, label= length(MPTP$row), size=2)+
ggtitle("MCC tree")+
ylim(-3,max(info.delimtree$data[[1]]$y)+10)
delimtree
data<-read.csv2("data/taille-castaneus.csv", sep=";")
data<-read.csv2("data/tailles-castaneus.csv", sep=";")
library(ggplot2)
View(data)
ggplot(data, aes(x = factor(Sampling),
y = TL)) +
# plotting
geom_violin(fill = "lightBlue", color = "#473e2c") +
labs(x = "Feed Supplement", y = "Chick Weight (g)")
ggplot(data, aes(x = factor(Sampling),
y = TL)) +
# plotting
geom_violin(fill = "lightBlue", color = "#473e2c") +
labs(x = "Méthodes", y = "Taille")
ggplot(data, aes(x = factor(Sampling),
y = TL)) +
# plotting
geom_violin(fill = "lightBlue", color = "#473e2c") +
labs(x = "Méthodes", y = "Longueur total (mm)")
library(ggplot2)
ggplot(data, aes(x = factor(Sampling),
y = TL)) +
# plotting
geom_violin(fill = "lightBlue", color = "#473e2c") +
labs(x = "Méthodes", y = "Longueur total (mm)")
plot<-ggplot(data, aes(x = factor(Sampling),
y = TL)) +
# plotting
geom_violin(fill = "lightBlue", color = "#473e2c") +
labs(x = "Méthodes", y = "Longueur total (mm)")
View(plot)
summary(data)
summary(data$TL)
summary(data$TL[data$Sampling=="ARMS"])
summary(data$TL[data$Sampling=="Biotas"])
summary(data$TL[data$Sampling=="BIOTAS"])
renv::restore()
use_description()
install.packages(usethis)
install.packages("usethis")
use_description()
library(usethis)
use_description()
library(ape)
library(phyloseq)
library(ggtree)
library(treeio)
library(scales)
library(ggplot2)
library(tidytree)
library(here)
library(dplyr)
library(adegenet)
library(tidyverse)
library(poppr)
library(pegas)
library(ips)
library(cowplot)
library(zoom)
library(maptree)
library(plotly)
library(ggvis)
library(phangorn)
library(phytools)
library(gridtext)
library(seqinr)
library(paran)
library(rncl)
library(treeio)
library(splits)
library(cowplot)
library(svglite)
library(ggrepel)
library(ape)
library(spider)
library(here)
library(ggplot2)
data<-read.dna(here("data/SWA","Algnt_for_SWA_cirripectes.fasta"), format="fasta")
data<-read.dna(here("data/SWA","Algnt_for_SWA_cirripectes.fasta"), format="fasta")
data
dist <- ape::dist.dna(data)
spp <- substr(dimnames(data)[[1]], 1, 50)
spp
swa<-slideAnalyses(data, spp, width=160, interval=1, treeMeasures=F)
install.packages("spider")
library(spider)
swa<-slideAnalyses(data, spp, width=160, interval=1, treeMeasures=F)
swa.tree<-slideAnalyses(data, spp, 160, interval=1, treeMeasures=T)
length(swa)
swa[[1]]
str(swa.tree)
dev.new()
plot(swa)
plot(swa.tree) # All plot
plot(swa)
dev.new()
plot(swa)
dev.new()
plot(swa.tree) # All plot
#C.castaneus VS C.stigmaticus
data<-read.dna(here("data/SWA","SWA_Castaneus_Stigmaticus.fasta"), format="fasta")
data
dist <- ape::dist.dna(data)
spp <- substr(dimnames(data)[[1]], 1, 50)
spp
swa<-slideAnalyses(data, spp, 160, interval=1, treeMeasures=F)
length(swa)
swa[[1]]
str(swa.tree)
dev.new()
#plot(swa) # All plot
length<-length(swa$pos_out)
graph<-as.data.frame(1:length)
graph$x<-swa$pos_out
graph$y<-swa$dist_mean_out
p<-ggplot(graph,aes(x,y))+
geom_line()+
scale_x_continuous(name = "Position", limits = c(0, max(graph$x)),expand=c(0,5))+
scale_y_continuous(name = "Divergence", limits = c(0,0.5),expand=c(0,0))+
theme_classic()+ #theme(plot.margin =  unit(c(0,1,0,0),"cm"))+
ggtitle("C. castaneus VS C. stigmaticus") +
geom_hline(yintercept=0.03)+
#annotate("text", x =max(graph$x), y= 0.03,label="3%") +
geom_hline(yintercept=0.01,linetype="dashed")+
annotate("rect", xmin = 70, xmax = 1018, ymin = 0, ymax = 0.5,
alpha = .4, fill = "grey") +#12S
annotate("text", x = 500, y= 0.29,label="12S") +
annotate("rect", xmin = 5461, xmax = 7020, ymin = 0, ymax = 0.5,
alpha = .4, fill = "grey")+ #COI
annotate("text", x = 6200, y= 0.29,label="COI")
p
p<-ggplot(graph,aes(x,y))+
geom_line()+
scale_x_continuous(name = "Position", limits = c(0, max(graph$x)),expand=c(0,5))+
scale_y_continuous(name = "Divergence", limits = c(0, max(0.5)),expand=c(0,0))+
theme_classic()+ #theme(plot.margin =  unit(c(0,1,0,0),"cm"))+
ggtitle("C. castaneus VS C. stigmaticus") +
geom_hline(yintercept=0.03)+
#annotate("text", x =max(graph$x), y= 0.03,label="3%") +
geom_hline(yintercept=0.01,linetype="dashed")+
annotate("rect", xmin = 70, xmax = 1018, ymin = 0, ymax = 0.5,
alpha = .4, fill = "grey") +#12S
#annotate("text", x = 500, y= 0.29,label="12S") +
annotate("rect", xmin = 5461, xmax = 7020, ymin = 0, ymax = 0.5,
alpha = .4, fill = "grey")+ #COI
#annotate("text", x = 6200, y= 0.29,label="COI")+
annotate("segment", x =70 , xend = 1018, y = 0.5, yend = 0.5, colour = "black", size=2,   alpha=0.6)+#12S
annotate("segment", x =1090 , xend = 2768, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#16S
annotate("segment", x =2874 , xend = 3821, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#ND1
annotate("segment", x =4033 , xend = 5080, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#ND1
annotate("segment", x =5461 , xend = 7020, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#COI
annotate("segment", x =7188 , xend = 7878, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#COII
annotate("segment", x =8796 , xend = 9579, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#COIII
annotate("segment", x =9653 , xend = 10001, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#ND3
annotate("segment", x =10360 , xend = 11739, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#ND4
annotate("segment", x = 11953, xend = 13791, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#ND5
annotate("segment", x =13782 , xend = 14037, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)+#ND6
annotate("segment", x =14380 , xend = 15520, y = 0.5, yend = 0.5, colour = "black", size=2, alpha=0.6)
p
